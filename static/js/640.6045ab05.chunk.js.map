{"version":3,"file":"static/js/640.6045ab05.chunk.js","mappings":"0NAGMA,EAAU,CACZC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAIRC,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC9BC,EAAG,0DAAsDF,IAE/DG,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,IAAUF,EAAKP,GACdU,MAAK,SAAAC,GAAQ,OAAIL,EAAaK,EAASC,KAA1B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,gCAAiCA,EAAnD,GACf,GAAE,CAACT,EAAYC,EAAcC,GACjC,E,SCuBD,EArCe,WAAO,IAAD,IACnB,GAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBb,EAAlB,KAMA,OACE,6BACE,0BACE,kBAAOc,KAAK,OAAOC,MAAOJ,EAAaK,SAPnB,SAACC,GACzBL,EAAeK,EAAMC,OAAOH,MAC7B,OAQG,yBACGF,IAAa,UAAAA,EAAUM,eAAV,eAAmBC,QAAS,GACxC,wBACGP,EAAUM,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACrB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,SAA4BC,GAASC,KAD9BF,EADY,OAOzB,uBACkC,KAAtB,OAATT,QAAS,IAATA,GAAA,UAAAA,EAAWM,eAAX,eAAoBC,QACjB,0CACA,kBAKV,SAACtB,EAAD,CAAWC,WAAYY,EAAaX,aAAcA,MAGvD,C","sources":["Api/SearchApi.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\n\nconst options = {\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNWZiNWI1MmI2NGZkZjQ5NTk2MTRkNmVlNjk2MzY2MSIsInN1YiI6IjY0MmRmOWRmYTZhNGMxMDBmNDJjODBmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dh_81ToGYTWvWLZD2NmIMHPSCDMFiUURjqsMwgAMB-A'\n    }\n  };\n\nexport const SearchApi = ({ movieSearh, setMovieData }) => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${movieSearh}`;\n\n    useEffect(() => {\n        axios.get(url, options)\n        .then(Response => setMovieData(Response.data))\n        .catch(error => console.error('Error fetching movie details:', error));\n    }, [movieSearh, setMovieData, url]);\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchApi } from \"Api/SearchApi\";\n\nconst Movies = () => {\n  const [movieSearch, setMovieSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n\n  const handleInputChange = (event) => {\n    setMovieSearch(event.target.value);\n  }\n\n  return (\n    <main>\n      <div>\n        <input type=\"text\" value={movieSearch} onChange={handleInputChange} />\n      </div>\n\n      <div>\n        {movieData && movieData.results?.length > 0 ? (\n          <ul>\n            {movieData.results.map(({ id, title, name }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`}>{title || name}</Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>\n            {movieData?.results?.length === 0\n              ? 'No hay resultados para esta b√∫squeda'\n              : 'Loading...'}\n          </p>\n        )}\n      </div>\n\n      <SearchApi movieSearh={movieSearch} setMovieData={setMovieData}/>\n    </main>\n  );\n}\n\nexport default Movies;\n"],"names":["options","headers","accept","Authorization","SearchApi","movieSearh","setMovieData","url","useEffect","axios","then","Response","data","catch","error","console","useState","movieSearch","setMovieSearch","movieData","type","value","onChange","event","target","results","length","map","id","title","name","to"],"sourceRoot":""}