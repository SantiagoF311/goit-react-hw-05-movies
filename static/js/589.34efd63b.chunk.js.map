{"version":3,"file":"static/js/589.34efd63b.chunk.js","mappings":"mOAGMA,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACnCC,EAAG,6CAAyCF,IAElDG,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAUF,EAAKP,GACZU,MAAK,SAAAC,GAAQ,OAAIL,EAAgBK,EAASC,KAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,gCAAiCA,EAAnD,GACf,GAAE,CAACR,EAAiBC,GACtB,E,SCiBD,EA/BsB,WACpB,IAAQS,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBb,EAArB,KAEA,OACE,6BACE,iCACCS,QAAQK,IAAIJ,GACZD,QAAQK,IAAID,GACZA,GACC,4BACE,wBAAKA,EAAaE,SAClB,gBAAKC,IAAG,yCAAoCH,EAAaI,eAAiBC,IAAKL,EAAaE,SAC5F,0CAAkBI,WAAWN,EAAaO,aAAaC,QAAQ,QAC/D,sCACA,uBAAIR,EAAaS,YACjB,oCACA,uBAAIT,EAAaU,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAGxD,uCAGF,SAAC,KAAD,CAAMC,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,KAAD,KACA,SAAC9B,EAAD,CAAiBC,QAASW,EAAIV,gBAAiBA,MAGpD,C","sources":["Api/MovieDetailsApi.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNWZiNWI1MmI2NGZkZjQ5NTk2MTRkNmVlNjk2MzY2MSIsInN1YiI6IjY0MmRmOWRmYTZhNGMxMDBmNDJjODBmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dh_81ToGYTWvWLZD2NmIMHPSCDMFiUURjqsMwgAMB-A'\n  }\n};\n\nexport const MovieDetailsApi = ({ movieId, setMovieDetails }) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n  useEffect(() => {\n    axios.get(url, options)\n      .then(Response => setMovieDetails(Response.data))\n      .catch(error => console.error('Error fetching movie details:', error));\n  }, [setMovieDetails, url]);\n};\n","import React, { useState } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { MovieDetailsApi } from 'Api/MovieDetailsApi';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  return (\n    <main>\n      <h1>Hola</h1>\n      {console.log(id)}\n      {console.log(movieDetails)}\n      {movieDetails ? (\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <img src={`https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}`} alt={movieDetails.title} />\n          <p>Vote Average: {parseFloat(movieDetails.vote_average.toFixed(1))}</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>{movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n\n      <Link to='cast'>Cast</Link>\n      <Link to='reviews'>Reviews</Link>\n      <Outlet />\n      <MovieDetailsApi movieId={id} setMovieDetails={setMovieDetails} />\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["options","headers","accept","Authorization","MovieDetailsApi","movieId","setMovieDetails","url","useEffect","axios","then","Response","data","catch","error","console","id","useParams","useState","movieDetails","log","title","src","backdrop_path","alt","parseFloat","vote_average","toFixed","overview","genres","map","genre","name","join","to"],"sourceRoot":""}